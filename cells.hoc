load_file("nrngui.hoc")
begintemplate HHneuronE

public soma, synlist
create soma
objref esyn, esyn_for_spon, esynSTDP
objref synlist

proc init(){local x, y, z, nsyn, i
    x=$1 y=$2 z=$3 nsyn=$4
    soma {
	pt3dclear() pt3dadd(0+x,0+y,0+z,12) pt3dadd(15+x,0+y,0+z,12)
    }
    
    soma { 
	L = 30
	diam = 30
	nseg = 1
	cm = 1
	insert hh
    }
    synlist = new List()
    soma {
	esyn = new Exp2Syn(0.9)//Exp2Syn(0.8)
	synlist.append(esyn)
	esyn_for_spon = new Exp2Syn(0.8)//Exp2Syn(0.85)
	synlist.append(esyn_for_spon)
	
	//printf("before for section\n")
	for i=0, nsyn-1 {
	    //printf("%d \n",i)
	    esynSTDP = new ExpSynSTDP(0.5)
	    synlist.append(esynSTDP)
	}
    }
}

endtemplate HHneuronE

begintemplate HHneuronI

public soma, synlist
create soma
objref synlist
objref esyn_for_spon, dammy, esyn

proc init(){local x, y, z, nsyn, i
    x=$1 y=$2 z=$3 nsyn=$4
    soma{
	L = 30
	soma.diam = 30
	soma.nseg = 1
	insert hh
    }
    synlist = new List()
    soma {
	dammy = new Exp2Syn(0.1)
	synlist.append(dammy)
	esyn_for_spon = new Exp2Syn(0.8)
	synlist.append(esyn_for_spon)
	
	for i=0, nsyn-1{
	    esyn = new Exp2Syn(0.5)
	    synlist.append(esyn)
	}
    }
}

endtemplate HHneuronI


objref cells
objref recordSpike
objref nil
objref tvec, idvec

proc makeCells(){local i, num_cell, num_ecell localobj cell
    num_cell = $1
    num_ecell = $2
    cells = new List()
    recordSpike = new List()
    tvec = new Vector()
    idvec = new Vector()
    counter = 0
    counter2 = 0
    for i=0, num_cell-1 {
	if(i<num_ecell){
	    cell = new HHneuronE(160*counter2,20*(i%10),0, NSYN_MAX)
	}else{
	    cell = new HHneuronI(160*counter2,20*(i%10), 0, NSYN_MAX)
	}
	cells.append(cell)
	cells.object(i).soma recordSpike.append(new NetCon(&v(0.5),nil,0.0,0,1.0))
	recordSpike.object(i).record(tvec, idvec)
	counter = counter + 1
	if(counter==10){
	    counter = 0
	    counter2 = counter2 + 1
	}
    }
}
